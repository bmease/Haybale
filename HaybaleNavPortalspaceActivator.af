~~ {
~~ FOR AUTO-COMPLETION ASSISTANCE: testvar getvar setvar touchvar clearallvars clearvar getcharintprop getchardoubleprop getcharquadprop getcharboolprop getcharstringprop getisspellknown getcancastspell_hunt getcancastspell_buff getcharvital_base getcharvital_current getcharvital_buffedmax getcharskill_traininglevel getcharskill_base getcharskill_buffed getplayerlandcell getplayercoordinates coordinategetns coordinategetwe coordinategetz coordinatetostring coordinateparse coordinatedistancewithz coordinatedistanceflat wobjectgetphysicscoordinates wobjectgetname wobjectgetobjectclass wobjectgettemplatetype wobjectgetisdooropen wobjectfindnearestmonster wobjectfindnearestdoor wobjectfindnearestbyobjectclass wobjectfindininventorybytemplatetype wobjectfindininventorybyname wobjectfindininventorybynamerx wobjectgetselection wobjectgetplayer wobjectfindnearestbynameandobjectclass actiontryselect actiontryuseitem actiontryapplyitem actiontrygiveitem actiontryequipanywand actiontrycastbyid actiontrycastbyidontarget chatbox chatboxpaste statushud statushudcolored uigetcontrol uisetlabel isfalse istrue iif randint cstr strlen getobjectinternaltype cstrf stopwatchcreate stopwatchstart stopwatchstop stopwatchelapsedseconds cnumber floor ceiling round abs getworldname getitemcountininventorybyname getheading getitemcountininventorybynamerx getheadingto actiontrygiveprofile vitae getfellowshipstatus getfellowshipname getfellowshipisopen getfellowshipisleader getfellowshipleaderid getfellowshipcanrecruit getfellowid getfellowshipcount getfellowshiplocked getfellowname getfellowshipisfull sin cos tan sqrt asin acos atan atan2 sinh cosh tanh vtsetmetastate getregexmatch echo chr ord wobjectgetid wobjectgethealth wobjectfindbyid wobjectgetintprop wobjectfindnearestbytemplatetype wobjectgetopencontainer testquestflag getquestktprogress isrefreshingquests getquestktrequired getqueststatus getisday getgamehour getgamehourname getisnight getgameday getgameticks getminutesuntilday getgamemonth getgamemonthname getminutesuntilnight getgameyear uisetvisible uiviewvisible uiviewexists getgvar touchgvar getpvar touchpvar setgvar cleargvar setpvar clearpvar testgvar clearallgvars testpvar clearallpvars dictgetitem dictcreate dicthaskey dictadditem dictkeys dictremovekey dictvalues dictclear dictsize dictcopy listgetitem listpop listcreate listcontains listremove listadd listindexof listremoveat listinsert listlastindexof listclear listcopy listcount listreverse

~~
~~ File auto-generated by metaf, a program created by Eskarina of Morningthaw/Coldeve.
~~		Get metaf here: https://github.com/JJEII/metaf/
~~
~~ All recognized structural designators:
~~		STATE:				DO:
~~		IF:					NAV:
~~
~~ All recognized CONDITION (IF:) operation keywords:
~~		Never				NavEmpty			MobsInDist_Priority		Not
~~		Always				Death				NeedToBuff				PSecsInStateGE
~~		All					VendorOpen			NoMobsInDist			SecsOnSpellGE
~~		Any					VendorClosed		BlockE					BuPercentGE
~~		ChatMatch			ItemCountLE			CellE					DistToRteGE
~~		MainSlotsLE			ItemCountGE			IntoPortal				Expr
~~		SecsInStateGE		MobsInDist_Name		ExitPortal				ChatCapture
~~
~~ All recognized ACTION (DO:) operation keywords:
~~		None				EmbedNav			ChatExpr				SetOpt
~~		SetState			CallState			SetWatchdog				CreateView
~~		Chat				Return				ClearWatchdog			DestroyView
~~		DoAll				DoExpr				GetOpt					DestroyAllViews
~~
~~ All recognized NAV types:
~~		circular			follow
~~		linear				once
~~
~~ All recognized NAV NODE types:
~~		flw					vnd
~~		pnt					ptl
~~		rcl					tlk
~~		pau					chk
~~		cht					jmp
~~		prt (deprecated in VTank)
~~ }


STATE: {Default} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				DoExpr {setvar[NPC, 37]}
				DoExpr {setvar[TYPE_OBJECT, 7]}

				DoExpr {setvar[OriginalEnableNav, vtgetsetting[EnableNav]]}
				DoExpr {setvar[metaname, `HaybaleNavPortalspaceActivator`]}

	IF:	Always
		DO:	DoExpr {ifthen[$LEVEL_DEBUG>=@HBDebug, `echo[\`[DEBUG] Haybale Nav Empyrean Portalspace Activator v1.0.0 by Che de Pa of Sundering\`, $COLOR_DEBUG]`, `false`]}

	IF: Always
		DO: SetState {ParseArguments}

~~ }


STATE: {ParseArguments} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Warn if arguments are not defined
	IF: Expr {testvar[HBArguments]==false}
		DO: DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] Arguments are not defined!\`, $COLOR_WARN]`, `false`]}
				SetState {Finished}

	~~ Warn if arguments are missing for this meta
	IF: Expr {dicthaskey[$HBArguments, $metaname]==false}
		DO: DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] Arguments are missing for this meta!\`, $COLOR_WARN]`, `false`]}
				SetState {Finished}

	~~ Get arguments for this meta
	IF: Always
		DO: DoExpr {$arguments=dictgetitem[$HBArguments, $metaname]}

	~~ Warn if destination argument is missing
	IF: Expr {dicthaskey[$arguments, `destination`]==false}
		DO: DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] Destination is missing from arguments\`, $COLOR_WARN]`, `false`]}
				SetState {Finished}

	~~ Get destination
	IF: Always
		DO: DoExpr {$destination=dictgetitem[$arguments, `destination`]}

	~~ Navigate to destination
	IF: Always
		DO: SetState {NavToDestination}

~~ }


STATE: {NavToDestination} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				DoExpr {setvar[DESTINATION_LANDCELLS, dictcreate[]]}
				DoExpr {dictadditem[$DESTINATION_LANDCELLS, `AsheronsCastle`, listcreate[`D59A0000`]]}
				DoExpr {dictadditem[$DESTINATION_LANDCELLS, `Hoshino`, listcreate[`49E40000`]]}
				DoExpr {dictadditem[$DESTINATION_LANDCELLS, `FrozenValley`, listcreate[`7AE80000`]]}
				DoExpr {dictadditem[$DESTINATION_LANDCELLS, `Rynthid`, listcreate[`2C320000`]]}
				DoExpr {dictadditem[$DESTINATION_LANDCELLS, `VR`, listcreate[`B3490000`, `B1460000`]]}

	IF: Always
		DO: DoAll
				DoExpr {setvar[DESTINATION_NAME, dictcreate[]]}
				DoExpr {dictadditem[$DESTINATION_NAME, `AsheronsCastle`, `Asheron's Castle`]}
				DoExpr {dictadditem[$DESTINATION_NAME, `Hoshino`, `Hoshino`]}
				DoExpr {dictadditem[$DESTINATION_NAME, `FrozenValley`, `Frozen Valley`]}
				DoExpr {dictadditem[$DESTINATION_NAME, `Rynthid`, `Rynthid`]}
				DoExpr {dictadditem[$DESTINATION_NAME, `VR`, `Viridian Rise`]}

	~~ Finish if at destination
	IF: Expr {listcontains[dictgetitem[$DESTINATION_LANDCELLS, $destination], cstrf[getplayerlandblock[], `X8`]]==true}
		DO: SetState {Finished}

	~~ Navigate to Haven if not there
	IF: Not BlockE 01AC0000
		DO:	SetState {ToHaven}

	~~ Navigate to Empyrean Portalspace Activator if in Haven
	IF: BlockE 01AC0000
		DO:	SetState {ToEmpyreanPortalspaceActivator}

	~~ Use Empyrean Portalspace Activator if in Haven
	IF:	CellE 01AC0135
		DO:	SetState {UseEmpyreanPortalspaceActivator}

~~ }


STATE: {ToHaven} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO:	DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Haven\`, $COLOR_INFO]`, `false`]}

	~~ Set EnableNav to navigate
	IF: Always
		DO: SetOpt {EnableNav} {True}

	~~ Navigate to Haven
	IF: Expr {@HBHavenRecallSpell==1636}
		DO: EmbedNav ToHavenSending {ToHaven}

	~~ Navigate to Haven
	IF: Expr {@HBHavenRecallSpell==1635}
		DO: EmbedNav ToHavenRecall {ToHaven}


	~~ Finished navigating
	IF:	All
			NavEmpty
			BlockE 01AC0000
		DO: SetState {ToEmpyreanPortalspaceActivator}
~~ }


STATE: {ToEmpyreanPortalspaceActivator} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO:	DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Empyrean Portalspace Activator\`, $COLOR_INFO]`, `false`]}

	~~ Set EnableNav to navigate
	IF: Always
		DO: SetOpt {EnableNav} {True}

	~~ Navigate to Empyrean Portalspace Activator
	IF: Always
		DO: EmbedNav ToEmpyreanPortalspaceActivator {ToEmpyreanPortalspaceActivator}

	~~ Finished navigating
	IF:	All
			NavEmpty
			CellE 01AC0135
		DO: SetState {UseEmpyreanPortalspaceActivator}
~~ }


STATE: {UseEmpyreanPortalspaceActivator} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Expr {testvar[using]==false}
		DO:	DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Using Empyrean Portalspace Activator\`, $COLOR_INFO]`, `false`]}
				DoExpr {$using=true}

	IF: Always
		DO: DoAll
				DoExpr {setvar[DESTINATION_ITEMS, dictcreate[]]}
				DoExpr {dictadditem[$DESTINATION_ITEMS, `AsheronsCastle`, `Powdered Agate`]}
				DoExpr {dictadditem[$DESTINATION_ITEMS, `Hoshino`, `Powdered Turquoise`]}
				DoExpr {dictadditem[$DESTINATION_ITEMS, `FrozenValley`, `Powdered Quartz`]}
				DoExpr {dictadditem[$DESTINATION_ITEMS, `Rynthid`, `Powdered Carnelian`]}
				DoExpr {dictadditem[$DESTINATION_ITEMS, `VR`, `Powdered Malachite`]}

				DoExpr {$item=dictgetitem[$DESTINATION_ITEMS, $destination]}

	~~ Warn if out of item
	IF: Expr {getitemcountininventorybyname[$item]==0}
		DO: DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] Out of \`+$item, $COLOR_WARN]`, `false`]}
				SetState {Finished}

	~~ Hand item to Empyrean Portalspace Activator
	IF: All
			Expr {isportaling[]==false}
			Expr {getobjectinternaltype[wobjectfindnearestbynameandobjectclass[$NPC, `Empyrean Portalspace Activator`]]==$TYPE_OBJECT}
		DO: DoAll
				DoExpr {actiontrygiveitem[wobjectfindininventorybyname[$item], wobjectfindnearestbynameandobjectclass[$NPC, `Empyrean Portalspace Activator`]]}
				SetState {UseEmpyreanPortalspaceActivator}

	IF:	All
			IntoPortal
			Expr {listcontains[dictgetitem[$DESTINATION_LANDCELLS, $destination], cstrf[getplayerlandblock[], `X8`]]==true}
		DO: SetState {Finished}
~~ }


STATE: {Finished} ~~ {

	IF: Always
		DO:	DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Finished navigating to destination\`, $COLOR_INFO]`, `false`]}

	IF: Always
		DO: DoExpr {ifthen[@HBConfirm==true, `chatbox[\`/t \`+@HBLeader+\`, Finished navigating to \`+dictgetitem[$DESTINATION_NAME, $destination]]`, `false`]}

	~~ Reset all options to what they originally were
	IF: Always
		DO: SetOpt {EnableNav} {$OriginalEnableNav}

	~~ Clear all variables
	IF: Always
		DO: DoExpr {listmap[listcreate[`item`, `using`, `metaname`, `arguments`, `destination`, `DESTINATION_LANDCELLS`, `DESTINATION_ITEMS` `DESTINATION_NAME`], `clearvar[$1]`]}

	IF: Always
		DO: ChatExpr {`/vt meta load `+$HBReturnMeta}

~~ }




NAV: ToHavenSending once ~~ {
	rcl -100.950540002187 35.6048201084137 2.08333134651184E-05 {Lifestone Sending}
~~ }

NAV: ToHavenRecall once ~~ {
	rcl -100.950540002187 35.6048201084137 2.08333134651184E-05 {Lifestone Recall}
~~ }


NAV: ToEmpyreanPortalspaceActivator once ~~ {
	~~ pnt -100.975732088089 35.5507949988047 2.08333134651184E-05
	pnt -101.024495410919 35.5612228711446 2.08333134651184E-05
	pnt -100.981455087662 35.6083782513936 2.08333134651184E-05
	pnt -100.934240690867 35.6245988269647 2.08333134651184E-05
	pnt -100.882916227976 35.6184421122074 2.08333134651184E-05
	pnt -100.874235407511 35.5930881539981 2.08333134651184E-05
	pnt -100.844966570536 35.5917740066846 2.08333134651184E-05
~~ }

