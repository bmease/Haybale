~~ {
~~ FOR AUTO-COMPLETION ASSISTANCE: testvar getvar setvar touchvar clearallvars clearvar getcharintprop getchardoubleprop getcharquadprop getcharboolprop getcharstringprop getisspellknown getcancastspell_hunt getcancastspell_buff getcharvital_base getcharvital_current getcharvital_buffedmax getcharskill_traininglevel getcharskill_base getcharskill_buffed getplayerlandcell getplayercoordinates coordinategetns coordinategetwe coordinategetz coordinatetostring coordinateparse coordinatedistancewithz coordinatedistanceflat wobjectgetphysicscoordinates wobjectgetname wobjectgetobjectclass wobjectgettemplatetype wobjectgetisdooropen wobjectfindnearestmonster wobjectfindnearestdoor wobjectfindnearestbyobjectclass wobjectfindininventorybytemplatetype wobjectfindininventorybyname wobjectfindininventorybynamerx wobjectgetselection wobjectgetplayer wobjectfindnearestbynameandobjectclass actiontryselect actiontryuseitem actiontryapplyitem actiontrygiveitem actiontryequipanywand actiontrycastbyid actiontrycastbyidontarget chatbox chatboxpaste statushud statushudcolored uigetcontrol uisetlabel isfalse istrue iif randint cstr strlen getobjectinternaltype cstrf stopwatchcreate stopwatchstart stopwatchstop stopwatchelapsedseconds cnumber floor ceiling round abs getworldname getitemcountininventorybyname getheading getitemcountininventorybynamerx getheadingto actiontrygiveprofile vitae getfellowshipstatus getfellowshipname getfellowshipisopen getfellowshipisleader getfellowshipleaderid getfellowshipcanrecruit getfellowid getfellowshipcount getfellowshiplocked getfellowname getfellowshipisfull sin cos tan sqrt asin acos atan atan2 sinh cosh tanh vtsetmetastate getregexmatch echo chr ord wobjectgetid wobjectgethealth wobjectfindbyid wobjectgetintprop wobjectfindnearestbytemplatetype wobjectgetopencontainer testquestflag getquestktprogress isrefreshingquests getquestktrequired getqueststatus getisday getgamehour getgamehourname getisnight getgameday getgameticks getminutesuntilday getgamemonth getgamemonthname getminutesuntilnight getgameyear uisetvisible uiviewvisible uiviewexists getgvar touchgvar getpvar touchpvar setgvar cleargvar setpvar clearpvar testgvar clearallgvars testpvar clearallpvars dictgetitem dictcreate dicthaskey dictadditem dictkeys dictremovekey dictvalues dictclear dictsize dictcopy listgetitem listpop listcreate listcontains listremove listadd listindexof listremoveat listinsert listlastindexof listclear listcopy listcount listreverse

~~
~~ File auto-generated by metaf, a program created by Eskarina of Morningthaw/Coldeve.
~~		Get metaf here: https://github.com/JJEII/metaf/
~~
~~ All recognized structural designators:
~~		STATE:				DO:
~~		IF:					NAV:
~~
~~ All recognized CONDITION (IF:) operation keywords:
~~		Never				NavEmpty			MobsInDist_Priority		Not
~~		Always				Death				NeedToBuff				PSecsInStateGE
~~		All					VendorOpen			NoMobsInDist			SecsOnSpellGE
~~		Any					VendorClosed		BlockE					BuPercentGE
~~		ChatMatch			ItemCountLE			CellE					DistToRteGE
~~		MainSlotsLE			ItemCountGE			IntoPortal				Expr
~~		SecsInStateGE		MobsInDist_Name		ExitPortal				ChatCapture
~~
~~ All recognized ACTION (DO:) operation keywords:
~~		None				EmbedNav			ChatExpr				SetOpt
~~		SetState			CallState			SetWatchdog				CreateView
~~		Chat				Return				ClearWatchdog			DestroyView
~~		DoAll				DoExpr				GetOpt					DestroyAllViews
~~
~~ All recognized NAV types:
~~		circular			follow
~~		linear				once
~~
~~ All recognized NAV NODE types:
~~		flw					vnd
~~		pnt					ptl
~~		rcl					tlk
~~		pau					chk
~~		cht					jmp
~~		prt (deprecated in VTank)
~~ }


STATE: {Default} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				DoExpr {setvar[OriginalEnableNav, vtgetsetting[EnableNav]]}
				DoExpr {setvar[OriginalNavCloseStopRange, vtgetsetting[NavCloseStopRange]]}
				DoExpr {setvar[OriginalOpenDoors, vtgetsetting[OpenDoors]]}
				DoExpr {setvar[OriginalEnableCombat, vtgetsetting[EnableCombat]]}
				DoExpr {setvar[OriginalAttackDistance, vtgetsetting[AttackDistance]]}
				DoExpr {setvar[OriginalNavPriorityBoost, vtgetsetting[NavPriorityBoost]]}
				DoExpr {setvar[OriginalApproachDistance, vtgetsetting[ApproachDistance]]}

				DoExpr {setvar[metaname, `HaybaleNavSubway`]}
				DoExpr {setvar[AphusLasselRecallSpell, 2931]}

				DoExpr {setvar[ANNEX, `Annex`]}
				DoExpr {setvar[Bottom, `Bottom`]}
				DoExpr {setvar[CandethKeep, `Candeth Keep`]}
				DoExpr {setvar[JungleSubs, `Jungle Subs`]}

	IF:	Always
		DO:	DoExpr {ifthen[$LEVEL_DEBUG>=@HBDebug, `echo[\`[DEBUG] Che Nav Subway v0.0.1 by Che de Pa of Sundering\`, $COLOR_DEBUG]`, `false`]}

	IF: Always
		DO: SetState {ParseArguments}

~~ }


STATE: {ParseArguments} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Warn if arguments are not defined
	IF: Expr {testvar[HBArguments]==false}
		DO: DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] Arguments are not defined!\`, $COLOR_WARN]`, `false`]}
				SetState {Finished}

	~~ Warn if arguments are missing for this meta
	IF: Expr {dicthaskey[$HBArguments, $metaname]==false}
		DO: DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] Arguments are missing for this meta!\`, $COLOR_WARN]`, `false`]}
				SetState {Finished}

	~~ Get arguments for this meta
	IF: Always
		DO: DoExpr {$arguments=dictgetitem[$HBArguments, $metaname]}

	~~ Warn if destination argument is missing
	IF: Expr {dicthaskey[$arguments, `destination`]==false}
		DO: DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] Destination is missing from arguments\`, $COLOR_WARN]`, `false`]}
				SetState {Finished}

	~~ Get destination
	IF: Always
		DO: DoExpr {$destination=dictgetitem[$arguments, `destination`]}

	~~ Navigate to destination
	IF: Always
		DO: SetState {ToAphusLassel}

~~ }


STATE: {ToAphusLassel} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Warn if Aphus Lassel Recall is not known
	IF: Not Expr {getisspellknown[$AphusLasselRecallSpell]}
		DO: DoAll
				DoExpr {ifthen[@HBConfirm==true, `chatbox[\`/t \`+@HBLeader+\`, I do not know the Aphus Lassel Recall\`]`, `false`]}
				SetState {Finished}

	~~ Cast the recall spell
	IF: Expr {isportaling[]==false}
		DO: DoAll
				DoExpr {actiontrycastbyid[$AphusLasselRecallSpell]}
				SetState {ToAphusLassel}

	~~ Finished recalling; go to ToTownNetwork
	IF: Expr {isportaling[]==true}
		DO: SetState {ToTownNetwork}

~~ }


STATE: {ToTownNetwork} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Set EnableNav to navigate
	IF: Always
		DO: DoAll
				SetOpt {EnableNav} {True}
				SetOpt {NavCloseStopRange} {0.00625}
				SetOpt {EnableCombat} {True}
				SetOpt {AttackDistance} {0.0083333}
				SetOpt {NavPriorityBoost} {False}
				SetOpt {ApproachDistance} {0.0041666}

	~~ Navigate into the Town Network portal
	IF: Always
		DO: DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Town Network\`, $COLOR_INFO]`, `false`]}
				EmbedNav ToTownNetwork {ToTownNetwork}

	~~ Finished using portal go to ToWing
	IF: All
			NavEmpty
			Expr {isportaling[]==false}
		DO: SetState {TownNetworkDropToAnnex}
~~ }


STATE: {TownNetworkDropToAnnex} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Navigate to Annex
	IF: Always
		DO: DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Annex\`, $COLOR_INFO]`, `false`]}
				EmbedNav TownNetworkDropToAnnex {TownNetworkDropToAnnex}

	~~ Finished navigating
	IF:	NavEmpty
		DO: SetState {AnnexToSubway}

~~ }

STATE: {AnnexToSubway} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Navigate to Subway
	IF: Always
		DO: DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Subway\`, $COLOR_INFO]`, `false`]}
				EmbedNav AnnexToSubway {AnnexToSubway}

	~~ Finished navigating
	IF: All
			NavEmpty
			Expr {isportaling[]==false}
		DO: SetState {NavigateSubway}

~~ }

STATE: {NavigateSubway} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				DoExpr {setvar[DESTINATION_WING, dictcreate[]]}
				DoExpr {dictadditem[$DESTINATION_WING, `Withered`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Mid Direlands`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Abayar's Laboratory`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Dark Design`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Creepy Canyons`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Thrungus Hole`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Black Death Catacombs`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Insatiable Vault`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Ravenous Vault`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Augmentation Realm Main Level`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Obsidian Rim`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Path of the Blind`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Singularity Bore`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Egg Orchard`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Candeth Keep`, $CandethKeep]}
				DoExpr {dictadditem[$DESTINATION_WING, `Jungle Subs`, $JungleSubs]}

	~~ Warn if no wing is found for destination
	IF: Expr {dicthaskey[$DESTINATION_WING, $destination]==false}
		DO: DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] No wing found for destination\`, $COLOR_WARN]`, `false`]}
				SetState {Finished}

	~~ This would be a lot cleaner if you could use variables for EmbedNav

	~~ Navigate to Bottom if portal is at the bottom
	IF: Expr {dictgetitem[$DESTINATION_WING, $destination]==$Bottom}
		DO: SetState {NavigateToBottomOfSubway}

	~~ If portal is up top, navigate to portal (Jungle subs / Candeth Keep)
	IF: Expr {dictgetitem[$DESTINATION_WING, $destination]!=$Bottom}
		DO: SetState {ToPortal}
~~ }

STATE: {NavigateToBottomOfSubway} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to bottom of subway\`, $COLOR_INFO]`, `false`]}
				EmbedNav ToBottom {ToBottom}

	IF: NavEmpty
		DO: SetState {JumpDownPit}

~~ }

STATE: {JumpDownPit} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: ChatExpr {`/ub jumpsw 179 250`}

	IF: Always
		DO: SetState {ToPortal}

~~ }

STATE: {ToPortal} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to \`+$destination, $COLOR_INFO]`, `false`]}

	IF: Expr {$destination==`Candeth Keep`}
		DO: EmbedNav ToCandethKeep {ToCandethKeep}

	IF: Expr {$destination==`Jungle Subs`}
		DO: DoAll
				SetOpt {OpenDoors} {True}
				EmbedNav ToJungleSubs {ToJungleSubs}

	IF: Expr {$destination==`Withered`}
		DO: EmbedNav ToWithered {ToWithered}

	IF: Expr {$destination==`Mid Direlands`}
		DO: EmbedNav ToMidDirelands {ToMidDirelands}

	IF: Expr {$destination==`Abayar's Laboratory`}
		DO: EmbedNav ToAbayarsLab {ToAbayarsLab}

	IF: Expr {$destination==`Dark Design`}
		DO: EmbedNav ToDarkDesign {ToDarkDesign}

	IF: Expr {$destination==`Creepy Canyons`}
		DO: EmbedNav ToCreepyCanyons {ToCreepyCanyons}

	IF: Expr {$destination==`Thrungus Hole`}
		DO: EmbedNav ToThrungusHole {ToThrungusHole}

	IF: Expr {$destination==`Black Death Catacombs`}
		DO: EmbedNav ToBlackDeathCatacombs {ToBlackDeathCatacombs}

	IF: Expr {$destination==`Insatiable Vault`}
		DO: EmbedNav ToInsatiableVault {ToInsatiableVault}

	IF: Expr {$destination==`Ravenous Vault`}
		DO: EmbedNav ToRavenousVault {ToRavenousVault}

	IF: Expr {$destination==`Augmentation Realm Main Level`}
		DO: EmbedNav ToAugmentationRealmMainLevel {ToAugmentationRealmMainLevel}

	IF: Expr {$destination==`Obsidian Rim`}
		DO: EmbedNav ToObsidianRim {ToObsidianRim}

	IF: Expr {$destination==`Path of the Blind`}
		DO: EmbedNav ToPathOfTheBlind {ToPathOfTheBlind}

	IF: Expr {$destination==`Singularity Bore`}
		DO: EmbedNav ToSingBore {ToSingBore}

	IF: Expr {$destination==`Egg Orchard`}
		DO: EmbedNav ToEggOrchard {ToEggOrchard}

	~~ Finished navigating
	IF:	NavEmpty
		DO: SetState {Finished}
~~ }


STATE: {Finished} ~~ {

	IF: Always
		DO:	DoExpr {ifthen[@HBConfirm==true, `chatbox[\`/t \`+@HBLeader+\`, Finished navigating to \`+$destination]`, `false`]}

	~~ Reset all options to what they originally were
	IF: Always
		DO: DoAll
				SetOpt {EnableNav} {$OriginalEnableNav}
				SetOpt {NavCloseStopRange} {$OriginalNavCloseStopRange}
				SetOpt {OpenDoors} {$OriginalOpenDoors}
				SetOpt {EnableCombat} {$OriginalEnableCombat}
				SetOpt {AttackDistance} {$OriginalAttackDistance}
				SetOpt {NavPriorityBoost} {$OriginalNavPriorityBoost}
				SetOpt {ApproachDistance} {$OriginalApproachDistance}

	~~ Return to the meta that called this one
	IF: Always
		DO: ChatExpr {`/vt meta load `+$HBReturnMeta}
~~ }

NAV: ToTownNetwork once ~~ {
	pnt 95.4570833206177 2.25772916475932 0.24168750445048
	pnt 95.4609819412231 2.30489470163981 0.242775011062622
	ptl 95.4609819412231 2.30489470163981 0.242775011062622 95.4555708567301 2.31398749351501 0.242491692304611 14 {Portal to Town Network}
~~ }

NAV: TownNetworkDropToAnnex once ~~ {
	pnt -101.658333333333 -96.6833333333333 2.08333134651184E-05
	pnt -101.65870701472 -96.8349726676941 2.08333134651184E-05
~~ }

NAV: AnnexToSubway once ~~ {
	pnt -101.661237780253 -96.8914724985759 2.08333134651184E-05
	pnt -101.694149239858 -96.9394100189209 2.08333134651184E-05
	pnt -101.695264720917 -97.0367160161336 2.08333134651184E-05
	pnt -101.658032194773 -97.0743713378906 2.08333134651184E-05
	ptl -101.6576573054 -96.8335268656413 2.08333134651184E-05 -101.658503754934 -97.0861541748047 -0.000262499845121056 14 {Abandoned Mine}
~~ }

NAV: ToCandethKeep once ~~ {
	pnt -100.81713698705 58.6845154285431 2.08333134651184E-05
	pnt -100.81690826416 58.6307246049245 2.08333134651184E-05
	pnt -100.81670182546 58.5821729024251 2.08333134651184E-05
	pnt -100.816461499532 58.5173409461975 -0.0249791661898295
	pnt -100.86979265213 58.5157088279724 -0.0249791661898295
	pnt -100.89459643364 58.5163278579712 -0.0249791661898295
	ptl -67.0473250071208 -87.54354583323 0.200020837783813 -100.906679169337 58.5163333257039 -0.025262501090765 14 {Candeth Keep Portal}
~~ }

NAV: ToJungleSubs once ~~ {
	pnt -100.816574414571 58.7430154085159 2.08333134651184E-05
	pnt -100.816981283824 58.7607209682465 2.08333134651184E-05
	ptl -100.816981283824 58.7607209682465 2.08333134651184E-05 -100.817487080892 58.7707758347193 -0.000262499845121056 14 {Jungle Shadows}
~~ }

NAV: ToBottom once ~~ {
	pnt -100.816952896118 58.6853310743968 2.08333134651184E-05
	pnt -100.817217636108 58.5834192752838 2.08333134651184E-05
	pnt -100.816594950358 58.4998394330343 -0.0249791661898295
	pnt -100.861760965983 58.4547861417135 -0.0249791661898295
	pnt -100.858623663584 58.3746665318807 -0.0249791661898295
	pnt -100.858156140645 58.2650678634644 -0.0499791701634725
	pnt -100.798241837819 58.2661706288656 -0.0499791701634725
	pnt -100.730016040802 58.263564491272 -0.0749791701634725
	pnt -100.732201417287 58.3131246566772 -0.0874791701634725
	pnt -100.758532683055 58.3079465866089 -0.0999791701634725
	pnt -100.776837793986 58.2890581130981 -0.0999791701634725
	pnt -100.776291306814 58.2618207295736 -0.112479170163472
	pnt -100.752341079712 58.2645409901937 -0.124979170163473
	pnt -100.732793331146 58.2877575556437 -0.124520246187846
	pnt -100.731779988607 58.3132694880168 -0.137479162216187
	pnt -100.779840024312 58.311304473877 -0.162479162216187
	pnt -100.776044305166 58.2497385025024 -0.174979162216187
	pnt -100.775420951843 58.1198394139608 -0.174979162216187
	pau -100.775420951843 58.1198394139608 -0.174979162216187 1000
~~ }

NAV: ToWithered once ~~ {
	pnt -100.775049813588 58.1491497039795 -0.299979146321615
	pnt -100.774129327138 58.1824031829834 -0.299979146321615
	pnt -100.765644550323 58.1825611750285 -0.299979146321615
	ptl -100.765644550323 58.1825611750285 -0.299979146321615 -100.754292074839 58.1833833058675 -0.300262480974197 14 {Withered}
~~ }

NAV: ToMidDirelands once ~~ {
	pnt -100.774848461151 58.1502560297648 -0.299979146321615
	pnt -100.774758148193 58.203041712443 -0.299979146321615
	ptl -100.774758148193 58.203041712443 -0.299979146321615 -100.774659570058 58.2123999913534 -0.300262480974197 14 {Mid Direlands Portal}
~~ }

NAV: ToAbayarsLab once ~~ {
	pnt -100.774848461151 58.1502560297648 -0.299979146321615
	pnt -100.774398867289 58.183265431722 -0.299979146321615
	pnt -100.7900293986 58.1836214065552 -0.299979146321615
	ptl -100.7900293986 58.1836214065552 -0.299979146321615 -100.801272900899 58.1829166412354 -0.300262480974197 14 {Abayar's Laboratory}
~~ }

NAV: ToDarkDesign once ~~ {
	pnt -100.82781829834 58.1001198450724 -0.299979146321615
	pnt -100.856392415365 58.0998235066732 -0.299979146321615
	pnt -100.85811662674 58.1135874430339 -0.299979146321615
	ptl -100.85811662674 58.1135874430339 -0.299979146321615 -100.857796669006 58.1220708211263 -0.300262480974197 14 {Dark Design}
~~ }

NAV: ToCreepyCanyons once ~~ {
	pnt -100.82781829834 58.1001198450724 -0.299979146321615
	pnt -100.856392415365 58.0998235066732 -0.299979146321615
	pnt -100.875203577677 58.1008419036865 -0.299979146321615
	ptl -100.875203577677 58.1008419036865 -0.299979146321615 -100.885297075907 58.1012903213501 -0.300262480974197 14 {Creepy Canyons}
~~ }

NAV: ToThrungusHole once ~~ {
	pnt -100.829277324677 58.0584368387858 -0.299979146321615
	pnt -100.857146485647 58.0587177912394 -0.299979146321615
	pnt -100.858244291941 58.0391155878703 -0.299979146321615
	ptl -100.858244291941 58.0391155878703 -0.299979146321615 -100.858608341217 58.029600016276 -0.300262480974197 14 {Thrungus Hole}
~~ }

NAV: ToBlackDeathCatacombs once ~~ {
	pnt -100.829277324677 58.0584368387858 -0.299979146321615
	pnt -100.857146485647 58.0587177912394 -0.299979146321615
	pnt -100.87443300883 58.0586861928304 -0.299979146321615
	ptl -100.87443300883 58.0586861928304 -0.299979146321615 -100.884618330002 58.0589791615804 -0.300262480974197 14 {Black Death Catacombs Portal}
~~ }

NAV: ToInsatiableVault once ~~ {
	pnt -100.775276597341 58.0045435587565 -0.299979146321615
	pnt -100.775104141235 57.9757811228434 -0.299979146321615
	pnt -100.792059326172 57.9751616160075 -0.299979146321615
	ptl -100.792059326172 57.9751616160075 -0.299979146321615 -100.802297083537 57.9758499781291 -0.300262480974197 14 {Insatiable Vault}
~~ }

NAV: ToRavenousVault once ~~ {
	pnt -100.775276597341 58.0045435587565 -0.299979146321615
	pnt -100.775104141235 57.9757811228434 -0.299979146321615
	pnt -100.775158882141 57.9572533925374 -0.299979146321615
	ptl -100.775158882141 57.9572533925374 -0.299979146321615 -100.775650819143 57.946962483724 -0.300262480974197 14 {Ravenous Vault}
~~ }

NAV: ToAugmentationRealmMainLevel once ~~ {
	pnt -100.775276597341 58.0045435587565 -0.299979146321615
	pnt -100.775104141235 57.9757811228434 -0.299979146321615
	pnt -100.757950655619 57.9746064503988 -0.299979146321615
	ptl -100.757950655619 57.9746064503988 -0.299979146321615 -100.74615166982 57.9738875071208 -0.300262480974197 14 {Augmentation Realm Main Level}
~~ }

NAV: ToObsidianRim once ~~ {
	pnt -100.721220334371 58.0583209991455 -0.299979146321615
	pnt -100.692338180542 58.0579523722331 -0.299979146321615
	pnt -100.691820144653 58.0416009267171 -0.299979146321615
	ptl -100.691820144653 58.0416009267171 -0.299979146321615 -100.690376377106 58.0309708277384 -0.300262480974197 14 {Obsidian Rim Portal}
~~ }

NAV: ToPathOfTheBlind once ~~ {
	pnt -100.721220334371 58.0583209991455 -0.299979146321615
	pnt -100.692338180542 58.0579523722331 -0.299979146321615
	pnt -100.678922017415 58.0579822540283 -0.299979146321615
	ptl -100.678922017415 58.0579822540283 -0.299979146321615 -100.667445818583 58.0580708185832 -0.300262480974197 14 {Path of the Blind}
~~ }

NAV: ToSingBore once ~~ {
	pnt -100.721055666606 58.0994677225749 -0.299979146321615
	pnt -100.691213385264 58.0994282404582 -0.299979146321615
	pnt -100.691246859233 58.1154715855916 -0.299979146321615
	ptl -100.691246859233 58.1154715855916 -0.299979146321615 -100.691033331553 58.1258499781291 -0.300262480974197 14 {Singularity Bore}
~~ }

NAV: ToEggOrchard once ~~ {
	pnt -100.721055666606 58.0994677225749 -0.299979146321615
	pnt -100.691213385264 58.0994282404582 -0.299979146321615
	pnt -100.677195040385 58.0994105656942 -0.299979146321615
	ptl -100.677195040385 58.0994105656942 -0.299979146321615 -100.667758337657 58.0989999771118 -0.300262480974197 14 {Egg Orchard}
~~ }