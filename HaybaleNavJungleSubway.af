~~ {
~~ FOR AUTO-COMPLETION ASSISTANCE: testvar getvar setvar touchvar clearallvars clearvar getcharintprop getchardoubleprop getcharquadprop getcharboolprop getcharstringprop getisspellknown getcancastspell_hunt getcancastspell_buff getcharvital_base getcharvital_current getcharvital_buffedmax getcharskill_traininglevel getcharskill_base getcharskill_buffed getplayerlandcell getplayercoordinates coordinategetns coordinategetwe coordinategetz coordinatetostring coordinateparse coordinatedistancewithz coordinatedistanceflat wobjectgetphysicscoordinates wobjectgetname wobjectgetobjectclass wobjectgettemplatetype wobjectgetisdooropen wobjectfindnearestmonster wobjectfindnearestdoor wobjectfindnearestbyobjectclass wobjectfindininventorybytemplatetype wobjectfindininventorybyname wobjectfindininventorybynamerx wobjectgetselection wobjectgetplayer wobjectfindnearestbynameandobjectclass actiontryselect actiontryuseitem actiontryapplyitem actiontrygiveitem actiontryequipanywand actiontrycastbyid actiontrycastbyidontarget chatbox chatboxpaste statushud statushudcolored uigetcontrol uisetlabel isfalse istrue iif randint cstr strlen getobjectinternaltype cstrf stopwatchcreate stopwatchstart stopwatchstop stopwatchelapsedseconds cnumber floor ceiling round abs getworldname getitemcountininventorybyname getheading getitemcountininventorybynamerx getheadingto actiontrygiveprofile vitae getfellowshipstatus getfellowshipname getfellowshipisopen getfellowshipisleader getfellowshipleaderid getfellowshipcanrecruit getfellowid getfellowshipcount getfellowshiplocked getfellowname getfellowshipisfull sin cos tan sqrt asin acos atan atan2 sinh cosh tanh vtsetmetastate getregexmatch echo chr ord wobjectgetid wobjectgethealth wobjectfindbyid wobjectgetintprop wobjectfindnearestbytemplatetype wobjectgetopencontainer testquestflag getquestktprogress isrefreshingquests getquestktrequired getqueststatus getisday getgamehour getgamehourname getisnight getgameday getgameticks getminutesuntilday getgamemonth getgamemonthname getminutesuntilnight getgameyear uisetvisible uiviewvisible uiviewexists getgvar touchgvar getpvar touchpvar setgvar cleargvar setpvar clearpvar testgvar clearallgvars testpvar clearallpvars dictgetitem dictcreate dicthaskey dictadditem dictkeys dictremovekey dictvalues dictclear dictsize dictcopy listgetitem listpop listcreate listcontains listremove listadd listindexof listremoveat listinsert listlastindexof listclear listcopy listcount listreverse

~~
~~ File auto-generated by metaf, a program created by Eskarina of Morningthaw/Coldeve.
~~		Get metaf here: https://github.com/JJEII/metaf/
~~
~~ All recognized structural designators:
~~		STATE:				DO:
~~		IF:					NAV:
~~
~~ All recognized CONDITION (IF:) operation keywords:
~~		Never				NavEmpty			MobsInDist_Priority		Not
~~		Always				Death				NeedToBuff				PSecsInStateGE
~~		All					VendorOpen			NoMobsInDist			SecsOnSpellGE
~~		Any					VendorClosed		BlockE					BuPercentGE
~~		ChatMatch			ItemCountLE			CellE					DistToRteGE
~~		MainSlotsLE			ItemCountGE			IntoPortal				Expr
~~		SecsInStateGE		MobsInDist_Name		ExitPortal				ChatCapture
~~
~~ All recognized ACTION (DO:) operation keywords:
~~		None				EmbedNav			ChatExpr				SetOpt
~~		SetState			CallState			SetWatchdog				CreateView
~~		Chat				Return				ClearWatchdog			DestroyView
~~		DoAll				DoExpr				GetOpt					DestroyAllViews
~~
~~ All recognized NAV types:
~~		circular			follow
~~		linear				once
~~
~~ All recognized NAV NODE types:
~~		flw					vnd
~~		pnt					ptl
~~		rcl					tlk
~~		pau					chk
~~		cht					jmp
~~		prt (deprecated in VTank)
~~ }


STATE: {Default} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				DoExpr {setvar[OriginalEnableNav, vtgetsetting[EnableNav]]}
				DoExpr {setvar[OriginalNavCloseStopRange, vtgetsetting[NavCloseStopRange]]}
				DoExpr {setvar[OriginalOpenDoors, vtgetsetting[OpenDoors]]}
				DoExpr {setvar[OriginalEnableCombat, vtgetsetting[EnableCombat]]}
				DoExpr {setvar[OriginalAttackDistance, vtgetsetting[AttackDistance]]}
				DoExpr {setvar[OriginalNavPriorityBoost, vtgetsetting[NavPriorityBoost]]}
				DoExpr {setvar[OriginalApproachDistance, vtgetsetting[ApproachDistance]]}

				DoExpr {setvar[metaname, `HaybaleNavJungleSubway`]}
				DoExpr {setvar[AphusLasselRecallSpell, 2931]}

				DoExpr {setvar[ANNEX, `Annex`]}
				DoExpr {setvar[Bottom, `Bottom`]}
				DoExpr {setvar[Top, `Top`]}

	IF:	Always
		DO:	DoExpr {ifthen[$LEVEL_DEBUG>=@HBDebug, `echo[\`[DEBUG] Che Nav Jungle Subway v0.0.1 by Che de Pa of Sundering\`, $COLOR_DEBUG]`, `false`]}

	IF: Always
		DO: SetState {ParseArguments}

~~ }


STATE: {ParseArguments} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Warn if arguments are not defined
	IF: Expr {testvar[HBArguments]==false}
		DO: DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] Arguments are not defined!\`, $COLOR_WARN]`, `false`]}
				SetState {Finished}

	~~ Warn if arguments are missing for this meta
	IF: Expr {dicthaskey[$HBArguments, $metaname]==false}
		DO: DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] Arguments are missing for this meta!\`, $COLOR_WARN]`, `false`]}
				SetState {Finished}

	~~ Get arguments for this meta
	IF: Always
		DO: DoExpr {$arguments=dictgetitem[$HBArguments, $metaname]}

	~~ Warn if destination argument is missing
	IF: Expr {dicthaskey[$arguments, `destination`]==false}
		DO: DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] Destination is missing from arguments\`, $COLOR_WARN]`, `false`]}
				SetState {Finished}

	~~ Get destination
	IF: Always
		DO: DoExpr {$destination=dictgetitem[$arguments, `destination`]}

	~~ Navigate to destination
	IF: Always
		DO: SetState {ToAphusLassel}

~~ }


STATE: {ToAphusLassel} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Warn if Aphus Lassel Recall is not known
	IF: Not Expr {getisspellknown[$AphusLasselRecallSpell]}
		DO: DoAll
				DoExpr {ifthen[@HBConfirm==true, `chatbox[\`/t \`+@HBLeader+\`, I do not know the Aphus Lassel Recall\`]`, `false`]}
				SetState {Finished}

	~~ Cast the recall spell
	IF: Expr {isportaling[]==false}
		DO: DoAll
				DoExpr {actiontrycastbyid[$AphusLasselRecallSpell]}
				SetState {ToAphusLassel}

	~~ Finished recalling; go to ToTownNetwork
	IF: Expr {isportaling[]==true}
		DO: SetState {ToTownNetwork}

~~ }


STATE: {ToTownNetwork} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Set EnableNav to navigate
	IF: Always
		DO: DoAll
				SetOpt {EnableNav} {True}
				SetOpt {NavCloseStopRange} {0.00625}
				SetOpt {EnableCombat} {True}
				SetOpt {AttackDistance} {0.0083333}
				SetOpt {NavPriorityBoost} {False}
				SetOpt {ApproachDistance} {0.0041666}

	~~ Navigate into the Town Network portal
	IF: Always
		DO: DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Town Network\`, $COLOR_INFO]`, `false`]}
				EmbedNav ToTownNetwork {ToTownNetwork}

	~~ Finished using portal go to ToWing
	IF: All
			NavEmpty
			Expr {isportaling[]==false}
		DO: SetState {TownNetworkDropToAnnex}
~~ }


STATE: {TownNetworkDropToAnnex} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Navigate to Annex
	IF: Always
		DO: DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Annex\`, $COLOR_INFO]`, `false`]}
				EmbedNav TownNetworkDropToAnnex {TownNetworkDropToAnnex}

	~~ Finished navigating
	IF:	NavEmpty
		DO: SetState {AnnexToSubway}

~~ }

STATE: {AnnexToSubway} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Navigate to Subway
	IF: Always
		DO: DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Subway\`, $COLOR_INFO]`, `false`]}
				EmbedNav AnnexToSubway {AnnexToSubway}

	~~ Finished navigating
	IF: All
			NavEmpty
			Expr {isportaling[]==false}
		DO: SetState {NavigateToJungleSubway}

~~ }

STATE: {NavigateToJungleSubway} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}


	IF: Always
		DO: DoAll
				SetOpt {OpenDoors} {True}
				EmbedNav ToJungleSubs {ToJungleSubs}

	~~ Finished navigating
	IF: NavEmpty
		DO: SetState {NavigateToJungleSubwayPit}
~~ }

STATE: {NavigateToJungleSubwayPit} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Jungle Subway Pit\`, $COLOR_INFO]`, `false`]}
				EmbedNav ToJungleSubsPit {ToJungleSubsPit}

	IF: NavEmpty
		DO: SetState {JumpDownPit}

~~ }

STATE: {JumpDownPit} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Jump down pit (Face west and jump)

	IF: Always
		DO: ChatExpr {`/ub jumpsw 270 75`}

	IF: Always
		DO: SetState {ToJungleSubsPortals}
~~ }

STATE: {ToJungleSubsPortals} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Jungle Subs Portals\`, $COLOR_INFO]`, `false`]}
				EmbedNav ToJungleSubsPortals {ToJungleSubsPortals}

	IF: NavEmpty
		DO: SetState {JumpToPortals}

~~ }

STATE: {JumpToPortals} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Jump down pit (Face west and jump)

	IF: Always
		DO: ChatExpr {`/ub jumpsw 270 75`}

	IF: Always
		DO: SetState {NavigatePortls}
~~ }

STATE: {NavigatePortls} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				DoExpr {setvar[DESTINATION_WING, dictcreate[]]}
				DoExpr {dictadditem[$DESTINATION_WING, `South Direlands`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Vissidal Island`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Beach Fort`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Black Spawn Den`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Obsidian Rim`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `North Direlands`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Crater Pathway`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Dark Isle`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Mukkir-Infested Black Spear Temple`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `The Colosseum`, $Bottom]}
				DoExpr {dictadditem[$DESTINATION_WING, `Nexus`, $Top]}
				DoExpr {dictadditem[$DESTINATION_WING, `Mountain Retreat`, $Top]}
				DoExpr {dictadditem[$DESTINATION_WING, `Empyrean Facility Upper Level`, $Top]}
				DoExpr {dictadditem[$DESTINATION_WING, `Underground City`, $Top]}
				DoExpr {dictadditem[$DESTINATION_WING, `Northern Aerlinthe Island`, $Top]}
				DoExpr {dictadditem[$DESTINATION_WING, `Halls of Metos`, $Top]}
				DoExpr {dictadditem[$DESTINATION_WING, `Frozen Valley Camp`, $Top]}

	~~ Warn if no wing is found for destination
	IF: Expr {dicthaskey[$DESTINATION_WING, $destination]==false}
		DO: DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] No wing found for destination\`, $COLOR_WARN]`, `false`]}
				SetState {Finished}

	~~ This would be a lot cleaner if you could use variables for EmbedNav

	~~ Navigate to Bottom if portal is at the bottom
	IF: Expr {dictgetitem[$DESTINATION_WING, $destination]==$Bottom}
		DO: SetState {ToLowerPortals}

	~~ If portal is up top, navigate to portal (Jungle subs / Candeth Keep)
	IF: Expr {dictgetitem[$DESTINATION_WING, $destination]!=$Bottom}
		DO: SetState {ToPortal}

~~ }

STATE: {ToLowerPortals} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Lower Portals\`, $COLOR_INFO]`, `false`]}
				EmbedNav ToLowerPortals {ToLowerPortals}

	IF: NavEmpty
		DO: SetState {JumpToLowerPortals}

~~ }

STATE: {JumpToLowerPortals} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	~~ Jump down to lower level portals (Jump towards cornder)
	IF: Always
		DO: ChatExpr {`/ub jumpsw 225 75`}

	IF: Always
		DO: SetState {ToCenterLowerLevel}

~~ }

STATE: {ToCenterLowerLevel} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Center of Lower Level\`, $COLOR_INFO]`, `false`]}
				EmbedNav ToCenterLowerLevel {ToCenterLowerLevel}

	IF: NavEmpty
		DO: SetState {ToPortal}

~~ }

STATE: {ToPortal} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to \`+$destination, $COLOR_INFO]`, `false`]}

	IF: Expr {$destination==`South Direlands`}
		DO: EmbedNav ToSouthDirelands {ToSouthDirelands}

	IF: Expr {$destination==`Vissidal Island`}
		DO: EmbedNav ToVissidalIsland {ToVissidalIsland}

	IF: Expr {$destination==`Beach Fort`}
		DO: EmbedNav ToBeachFort {ToBeachFort}

	IF: Expr {$destination==`Black Spawn Den`}
		DO: EmbedNav ToBSD {ToBSD}

	IF: Expr {$destination==`Obsidian Rim`}
		DO: EmbedNav ToObsidianRim {ToObsidianRim}

	IF: Expr {$destination==`North Direlands`}
		DO: EmbedNav ToNorthDirelands {ToNorthDirelands}

	IF: Expr {$destination==`Crater Pathway`}
		DO: EmbedNav ToCrater {ToCrater}

	IF: Expr {$destination==`Dark Isle`}
		DO: EmbedNav ToDarkIsle {ToDarkIsle}

	IF: Expr {$destination==`Mukkir-Infested Black Spear Temple`}
		DO: EmbedNav ToMukkirInfestedBlackSpearTemple {ToMukkirInfestedBlackSpearTemple}

	IF: Expr {$destination==`The Colosseum`}
		DO: EmbedNav ToColosseum {ToColosseum}

	IF: Expr {$destination==`Nexus`}
		DO: EmbedNav ToNexus {ToNexus}

	IF: Expr {$destination==`Mountain Retreat`}
		DO: EmbedNav ToMountainRetreat {ToMountainRetreat}

	IF: Expr {$destination==`Empyrean Facility Upper Level`}
		DO: EmbedNav ToAetheria {ToAetheria}

	IF: Expr {$destination==`Underground City`}
		DO: EmbedNav ToUndergroundCity {ToUndergroundCity}

	IF: Expr {$destination==`Northern Aerlinthe Island`}
		DO: EmbedNav ToNorthernAerlinthe {ToNorthernAerlinthe}

	IF: Expr {$destination==`Halls of Metos`}
		DO: EmbedNav ToHallsOfMetos {ToHallsOfMetos}

	IF: Expr {$destination==`Frozen Valley Camp`}
		DO: EmbedNav ToFrozenValleyCamp {ToFrozenValleyCamp}

	IF: ChatMatch {You must complete a quest to interact with that portal.}
		DO: DoAll
				DoExpr {ifthen[@HBConfirm==true, `chatbox[\`/t \`+@HBLeader+\`, I need to complete a quest to use the portal to \`+$destination]`, `false`]}
				SetState {Finished}

	~~ Finished navigating
	IF:	NavEmpty
		DO: SetState {Finished}
~~ }


STATE: {Finished} ~~ {

	IF: Always
		DO:	DoExpr {ifthen[@HBConfirm==true, `chatbox[\`/t \`+@HBLeader+\`, Finished navigating to \`+$destination]`, `false`]}

	~~ Reset all options to what they originally were
	IF: Always
		DO: DoAll
				SetOpt {EnableNav} {$OriginalEnableNav}
				SetOpt {NavCloseStopRange} {$OriginalNavCloseStopRange}
				SetOpt {OpenDoors} {$OriginalOpenDoors}
				SetOpt {EnableCombat} {$OriginalEnableCombat}
				SetOpt {AttackDistance} {$OriginalAttackDistance}
				SetOpt {NavPriorityBoost} {$OriginalNavPriorityBoost}
				SetOpt {ApproachDistance} {$OriginalApproachDistance}

	~~ Return to the meta that called this one
	IF: Always
		DO: ChatExpr {`/vt meta load `+$HBReturnMeta}
~~ }

NAV: ToTownNetwork once ~~ {
	pnt 95.4570833206177 2.25772916475932 0.24168750445048
	pnt 95.4609819412231 2.30489470163981 0.242775011062622
	ptl 95.4609819412231 2.30489470163981 0.242775011062622 95.4555708567301 2.31398749351501 0.242491692304611 14 {Portal to Town Network}
~~ }

NAV: TownNetworkDropToAnnex once ~~ {
	pnt -101.658333333333 -96.6833333333333 2.08333134651184E-05
	pnt -101.65870701472 -96.8349726676941 2.08333134651184E-05
~~ }

NAV: AnnexToSubway once ~~ {
	pnt -101.661237780253 -96.8914724985759 2.08333134651184E-05
	pnt -101.694149239858 -96.9394100189209 2.08333134651184E-05
	pnt -101.695264720917 -97.0367160161336 2.08333134651184E-05
	pnt -101.658032194773 -97.0743713378906 2.08333134651184E-05
	ptl -101.6576573054 -96.8335268656413 2.08333134651184E-05 -101.658503754934 -97.0861541748047 -0.000262499845121056 14 {Abandoned Mine}
~~ }

NAV: ToJungleSubs once ~~ {
	pnt -100.816574414571 58.7430154085159 2.08333134651184E-05
	pnt -100.816981283824 58.7607209682465 2.08333134651184E-05
	ptl -100.816981283824 58.7607209682465 2.08333134651184E-05 -100.817487080892 58.7707758347193 -0.000262499845121056 14 {Jungle Shadows}
~~ }

NAV: ToJungleSubsPit once ~~ {
	pnt -99.8737833976746 47.2811317125956 0.100020829836528
	pnt -99.8746238390605 47.2633839289347 0.100020829836528
	pnt -99.8932669639587 47.2502663294474 0.100020829836528
	pnt -99.9133276939392 47.2352952957153 0.100020829836528
	pau -99.9133276939392 47.2352952957153 0.100020829836528 1000
~~ }

NAV: ToJungleSubsPortals once ~~ {
	pnt -99.9338011423747 47.1839336395264 2.08333134651184E-05
	pnt -99.9333287239075 47.1473381678263 2.08333134651184E-05
	pnt -100.012151845296 47.1566207885742 2.08333134651184E-05
	pnt -100.015897750854 47.1982219696045 2.08333134651184E-05
	pnt -100.016217581431 47.2359512646993 2.08333134651184E-05
	pnt -100.016324297587 47.2781712532043 2.08333134651184E-05
	pnt -100.015661780039 47.320339457194 2.08333134651184E-05
	pnt -100.01604274114 47.3417230288188 2.08333134651184E-05
	pnt -99.9704992294312 47.3796689033508 2.08333134651184E-05
	pnt -99.9769536336263 47.3998410860697 2.08333134651184E-05
	pnt -99.9786438624064 47.432261578242 2.08333134651184E-05
	pnt -99.9922999064128 47.4414570490519 2.08333134651184E-05
	pnt -100.041291332245 47.4414313634237 2.08333134651184E-05
	pnt -100.079658222198 47.4874133110046 2.08333134651184E-05
	pnt -100.140157175064 47.4827728907267 2.08333134651184E-05
	pnt -100.142152579625 47.5245066086451 2.08333134651184E-05
	pnt -100.143814341227 47.6484468135983 2.08333134651184E-05
	pnt -100.196433750788 47.6497984732191 2.08333134651184E-05
	pnt -100.219838261604 47.6489964758356 2.08333134651184E-05
	pnt -100.228960911433 47.6287701547146 2.08333134651184E-05
	pnt -100.227453366915 47.5485550006231 2.08333134651184E-05
	pnt -100.220927174886 47.4856626033783 -0.0249791661898295
	pnt -100.188881508509 47.4791829427083 -0.0249791661898295
	pnt -100.143566465378 47.4879103501638 -0.0249791661898295
	pnt -100.136764367421 47.5163659413656 -0.0249791661898295
	pnt -100.141878398259 47.6024746815364 -0.0249791661898295
	pnt -100.163415638606 47.6082237124443 -0.0249791661898295
	pau -100.163415638606 47.6082237124443 -0.0249791661898295 1000
~~ }

NAV: ToLowerPortals once ~~ {
	pnt -100.24388833046 47.608739066124 -0.0496503750483195
	pnt -100.291040670872 47.609955283006 -0.0496102372805277
	pnt -100.313888518016 47.6002073923747 -0.0497566421826681
	pau -100.313888518016 47.6002073923747 -0.0497566421826681 1000
~~ }

NAV: ToCenterLowerLevel once ~~ {
	pnt -100.244984141986 47.6088864882787 -0.0749791701634725
~~ }

NAV: ToSouthDirelands once ~~ {
	pnt -100.168826214472 47.6080593427022 -0.0749791701634725
	ptl -100.242690594991 47.6088691512744 -0.0749791701634725 -100.155416663488 47.6083333333333 -0.0752625018358231 14 {South Direlands Portal}
~~ }

NAV: ToVissidalIsland once ~~ {
	pnt -100.183420308431 47.6245647549629 -0.0749791701634725
	ptl -100.183420308431 47.6245647549629 -0.0749791701634725 -100.183511257172 47.636482249697 -0.0752625018358231 14 {Vissidal Island}
~~ }

NAV: ToBeachFort once ~~ {
	pnt -100.225118255615 47.6222995102406 -0.0749791701634725
	ptl -100.225118255615 47.6222995102406 -0.0749791701634725 -100.223977915446 47.6367699166139 -0.0752625018358231 14 {Portal to the Beach Fort}
~~ }

NAV: ToBSD once ~~ {
	pnt -100.26631749471 47.6214622080326 -0.0749791701634725
	ptl -100.26631749471 47.6214622080326 -0.0749791701634725 -100.266649166743 47.6357244998217 -0.0752625018358231 14 {Black Spawn Den}
~~ }

NAV: ToObsidianRim once ~~ {
	pnt -100.307375399272 47.622316223383 -0.0749791701634725
	ptl -100.307375399272 47.622316223383 -0.0749791701634725 -100.308353873094 47.6354203333457 -0.0752625018358231 14 {Obsidian Rim Portal}
~~ }

NAV: ToNorthDirelands once ~~ {
	pnt -100.321368438005 47.6084683815638 -0.0749791701634725
	ptl -100.321368438005 47.6084683815638 -0.0749791701634725 -100.336250041922 47.6083333333333 -0.0752625018358231 14 {North Direlands Portal}
~~ }

NAV: ToCrater once ~~ {
	pnt -100.308815117677 47.5926368991534 -0.0749791701634725
	ptl -100.308815117677 47.5926368991534 -0.0749791701634725 -100.308262916406 47.580225833257 -0.0752625018358231 14 {Crater Pathway}
~~ }

NAV: ToDarkIsle once ~~ {
	pnt -100.26726890405 47.5937056183815 -0.0749791701634725
	ptl -100.26726890405 47.5937056183815 -0.0749791701634725 -100.266358335813 47.5811424970627 -0.0752625018358231 14 {Dark Isle}
~~ }

NAV: ToMukkirInfestedBlackSpearTemple once ~~ {
	pnt -100.225321602821 47.5926674644152 -0.0749791701634725
	ptl -100.225321602821 47.5926674644152 -0.0749791701634725 -100.225324583054 47.5808404127757 -0.0752625018358231 14 {Mukkir-Infested Black Spear Temple}
~~ }

NAV: ToColosseum once ~~ {
	pnt -100.183609469732 47.5940603057543 -0.0749791701634725
	ptl -100.183609469732 47.5940603057543 -0.0749791701634725 -100.183325417837 47.5797250032425 -0.0747708305716515 14 {The Colosseum}
~~ }

NAV: ToNexus once ~~ {
	pnt -100.308790139357 47.5950478633245 -0.0497206012407939
	ptl -100.308790139357 47.5950478633245 -0.0497206012407939 -100.308306666215 47.5802416642507 -0.0502624996006489 14 {Nexus Portal}
~~ }

NAV: ToMountainRetreat once ~~ {
	pnt -100.266729537646 47.5936864614487 -0.0497164567311605
	ptl -100.266729537646 47.5936864614487 -0.0497164567311605 -100.266564997037 47.5805999994278 -0.0502624996006489 14 {Mountain Retreat Portal}
~~ }

NAV: ToAetheria once ~~ {
	pnt -100.225196782748 47.5936014334361 -0.0497103532155355
	ptl -100.225196782748 47.5936014334361 -0.0497103532155355 -100.224616249402 47.5808612505595 -0.0502624996006489 14 {Empyrean Facility Upper Level}
~~ }

NAV: ToUndergroundCity once ~~ {
	pnt -100.170557800929 47.6081117947896 -0.0493856072425842
	ptl -100.170557800929 47.6081117947896 -0.0493856072425842 -100.157300424576 47.6082662502925 -0.0502624996006489 14 {Underground City Portal}
~~ }

NAV: ToNorthernAerlinthe once ~~ {
	pnt -100.224294821421 47.62360496521 -0.0497039794921875
	ptl -100.224294821421 47.62360496521 -0.0497039794921875 -100.22470583121 47.6367734998465 -0.0502624996006489 14 {Northern Aerlinthe Island}
~~ }

NAV: ToHallsOfMetos once ~~ {
	pnt -100.266111596425 47.6229169249535 -0.0497120896975199
	ptl -100.266111596425 47.6229169249535 -0.0497120896975199 -100.266772500674 47.6363037079573 -0.0502624996006489 14 {Halls of Metos}
~~ }

NAV: ToFrozenValleyCamp once ~~ {
	pnt -100.307020719846 47.6221084674199 -0.04970809618632
	ptl -100.307020719846 47.6221084674199 -0.04970809618632 -100.308156665166 47.6360826671123 -0.0502624996006489 14 {Frozen Valley Camp}
~~ }
