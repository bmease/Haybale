~~ {
~~ FOR AUTO-COMPLETION ASSISTANCE: testvar getvar setvar touchvar clearallvars clearvar getcharintprop getchardoubleprop getcharquadprop getcharboolprop getcharstringprop getisspellknown getcancastspell_hunt getcancastspell_buff getcharvital_base getcharvital_current getcharvital_buffedmax getcharskill_traininglevel getcharskill_base getcharskill_buffed getplayerlandcell getplayercoordinates coordinategetns coordinategetwe coordinategetz coordinatetostring coordinateparse coordinatedistancewithz coordinatedistanceflat wobjectgetphysicscoordinates wobjectgetname wobjectgetobjectclass wobjectgettemplatetype wobjectgetisdooropen wobjectfindnearestmonster wobjectfindnearestdoor wobjectfindnearestbyobjectclass wobjectfindininventorybytemplatetype wobjectfindininventorybyname wobjectfindininventorybynamerx wobjectgetselection wobjectgetplayer wobjectfindnearestbynameandobjectclass actiontryselect actiontryuseitem actiontryapplyitem actiontrygiveitem actiontryequipanywand actiontrycastbyid actiontrycastbyidontarget chatbox chatboxpaste statushud statushudcolored uigetcontrol uisetlabel isfalse istrue iif randint cstr strlen getobjectinternaltype cstrf stopwatchcreate stopwatchstart stopwatchstop stopwatchelapsedseconds cnumber floor ceiling round abs getworldname getitemcountininventorybyname getheading getitemcountininventorybynamerx getheadingto actiontrygiveprofile vitae getfellowshipstatus getfellowshipname getfellowshipisopen getfellowshipisleader getfellowshipleaderid getfellowshipcanrecruit getfellowid getfellowshipcount getfellowshiplocked getfellowname getfellowshipisfull sin cos tan sqrt asin acos atan atan2 sinh cosh tanh vtsetmetastate getregexmatch echo chr ord wobjectgetid wobjectgethealth wobjectfindbyid wobjectgetintprop wobjectfindnearestbytemplatetype wobjectgetopencontainer testquestflag getquestktprogress isrefreshingquests getquestktrequired getqueststatus getisday getgamehour getgamehourname getisnight getgameday getgameticks getminutesuntilday getgamemonth getgamemonthname getminutesuntilnight getgameyear uisetvisible uiviewvisible uiviewexists getgvar touchgvar getpvar touchpvar setgvar cleargvar setpvar clearpvar testgvar clearallgvars testpvar clearallpvars dictgetitem dictcreate dicthaskey dictadditem dictkeys dictremovekey dictvalues dictclear dictsize dictcopy listgetitem listpop listcreate listcontains listremove listadd listindexof listremoveat listinsert listlastindexof listclear listcopy listcount listreverse

~~
~~ File auto-generated by metaf, a program created by Eskarina of Morningthaw/Coldeve.
~~		Get metaf here: https://github.com/JJEII/metaf/
~~
~~ All recognized structural designators:
~~		STATE:				DO:
~~		IF:					NAV:
~~
~~ All recognized CONDITION (IF:) operation keywords:
~~		Never				NavEmpty			MobsInDist_Priority		Not
~~		Always				Death				NeedToBuff				PSecsInStateGE
~~		All					VendorOpen			NoMobsInDist			SecsOnSpellGE
~~		Any					VendorClosed		BlockE					BuPercentGE
~~		ChatMatch			ItemCountLE			CellE					DistToRteGE
~~		MainSlotsLE			ItemCountGE			IntoPortal				Expr
~~		SecsInStateGE		MobsInDist_Name		ExitPortal				ChatCapture
~~
~~ All recognized ACTION (DO:) operation keywords:
~~		None				EmbedNav			ChatExpr				SetOpt
~~		SetState			CallState			SetWatchdog				CreateView
~~		Chat				Return				ClearWatchdog			DestroyView
~~		DoAll				DoExpr				GetOpt					DestroyAllViews
~~
~~ All recognized NAV types:
~~		circular			follow
~~		linear				once
~~
~~ All recognized NAV NODE types:
~~		flw					vnd
~~		pnt					ptl
~~		rcl					tlk
~~		pau					chk
~~		cht					jmp
~~		prt (deprecated in VTank)
~~ }


STATE: {Default} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				DoExpr {setvar[NPC, 37]}
				DoExpr {setvar[TYPE_OBJECT, 7]}

				DoExpr {setvar[OriginalEnableNav, vtgetsetting[EnableNav]]}
				DoExpr {setvar[OriginalNavCloseStopRange, vtgetsetting[NavCloseStopRange]]}

	IF:	Always
		DO:	DoExpr {ifthen[$LEVEL_DEBUG>=@HBDebug, `echo[\`[DEBUG] Haybale Nav Haven Buffs v1.0.0 by Che de Pa of Sundering\`, $COLOR_DEBUG]`, `false`]}

	IF: Always
		DO: SetState {NavToDestination}

~~ }


STATE: {NavToDestination} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				SetOpt {EnableNav} {True}
				SetOpt {NavCloseStopRange} {0.0083333}

	~~ Navigate to Haven if not there
	IF: Not BlockE 01AC0000
		DO:	SetState {ToHaven}

	~~ Navigate to Empowered Tristone if in Haven
	IF: BlockE 01AC0000
		DO:	SetState {ToTristone}

~~ }


STATE: {ToHaven} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO:	DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Haven\`, $COLOR_INFO]`, `false`]}

	~~ Set EnableNav to navigate
	IF: Always
		DO: SetOpt {EnableNav} {True}

	~~ Navigate to Haven
	IF: Expr {@HBHavenRecallSpell==1636}
		DO: EmbedNav ToHavenSending {ToHaven}

	~~ Navigate to Haven
	IF: Expr {@HBHavenRecallSpell==1635}
		DO: EmbedNav ToHavenRecall {ToHaven}

	~~ Finished navigating
	IF:	All
			NavEmpty
			BlockE 01AC0000
		DO: SetState {ToTristone}

~~ }


STATE: {ToTristone} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO:	DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Empowered Tri-stone\`, $COLOR_INFO]`, `false`]}

	~~ Navigate to Empowered Tristone
	IF: Always
		DO: EmbedNav ToTristone {ToTristone}

	~~ Finished navigating
	IF:	All
			NavEmpty
			CellE 01AC011F
		DO: DoAll
				DoExpr {$item=`Empowered Tri-stone`}
				CallState {UseItem} {ToAurlanna}

~~ }


STATE: {ToAurlanna} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO:	DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Statue of Aurlanna\`, $COLOR_INFO]`, `false`]}

	~~ Navigate to Statue of Aurlanna
	IF: Always
		DO: EmbedNav ToAurlanna {ToAurlanna}

	~~ Finished navigating
	IF:	All
			NavEmpty
			CellE 01AC0115
		DO: DoAll
				DoExpr {$item=`Statue of Aurlanna`}
				CallState {UseItem} {ToStatue}

~~ }


STATE: {ToStatue} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO:	DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Navigating to Statue of Sandra 'srand' Powers\`, $COLOR_INFO]`, `false`]}

	~~ Navigate to Statue of Sandra 'srand' Powers
	IF: Always
		DO: EmbedNav ToStatue {ToStatue}

	~~ Finished navigating
	IF:	All
			NavEmpty
			CellE 01AC012C
		DO: DoAll
				DoExpr {$item=`Statue of Sandra 'srand' Powers`}
				CallState {UseItem} {Finished}

~~ }


STATE: {UseItem} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"(!|#)reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Expr {testvar[using]==false}
		DO:	DoAll
				DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Using \`+$item, $COLOR_INFO]`, `false`]}
				DoExpr {$using=true}

	~~ Use item
	IF: Expr {getobjectinternaltype[wobjectfindnearestbynameandobjectclass[$NPC, $item]]==$TYPE_OBJECT}
		DO: DoAll
				DoExpr {actiontryuseitem[wobjectfindnearestbynameandobjectclass[$NPC, $item]]}
				SetState {UseItem}

	IF:	Any
			All
				ChatCapture {^(?<tellname>.*?) gives you (?<npctext>.*)$} {}
				Expr {$capturegroup_tellname==$item}
			All
				ChatCapture {^(?<tellname>.*?) cast (?<npctext>.*)$} {}
				Expr {$capturegroup_tellname==$item}
		DO:	DoAll
				DoExpr {clearvar[using]}
				Return
~~ }


STATE: {Finished} ~~ {

	IF: Always
		DO:	DoExpr {ifthen[$LEVEL_INFO>=@HBDebug, `echo[\`[INFO] Finished Haven Buffs\`, $COLOR_INFO]`, `false`]}

	IF: Always
		DO:	DoExpr {ifthen[@HBConfirm==true, `chatbox[\`/t \`+@HBLeader+\`, Finished Haven Buffs\`]`, `false`]}

	~~ Reset all options to what they originally were
	IF: Always
		DO: DoAll
				SetOpt {EnableNav} {$OriginalEnableNav}
				SetOpt {NavCloseStopRange} {$OriginalNavCloseStopRange}

	~~ Clear all variables
	IF: Always
		DO: DoExpr {listmap[listcreate[`NPC`, `TYPE_OBJECT`, `OriginalEnableNav`], `clearvar[$1]`]}

	IF: Always
		DO: ChatExpr {`/vt meta load `+$HBReturnMeta}

~~ }




NAV: ToHavenSending once ~~ {
	rcl -100.950540002187 35.6048201084137 2.08333134651184E-05 {Lifestone Sending}
~~ }

NAV: ToHavenRecall once ~~ {
	rcl -100.950540002187 35.6048201084137 2.08333134651184E-05 {Lifestone Recall}
~~ }

NAV: ToAurlanna once ~~ {
	pnt -100.975180339813 35.5517879803975 2.08333134651184E-05
	pnt -101.007090854645 35.5533288876216 2.08333134651184E-05
	pnt -101.078877989451 35.5805146535238 2.08333134651184E-05
~~ }

NAV: ToStatue once ~~ {
	pnt -101.078877989451 35.5805146535238 2.08333134651184E-05
	pnt -101.041598653793 35.5728545109431 2.08333134651184E-05
	pnt -100.932141717275 35.6307718674342 2.08333134651184E-05
	pnt -100.889579312007 35.6412276963393 2.08333134651184E-05
	pnt -100.882402070363 35.6581061154604 2.08333134651184E-05
~~ }

NAV: ToTristone once ~~ {
	pnt -101.002761236827 35.5544490973155 2.08333134651184E-05
	pnt -100.975180339813 35.5517879803975 2.08333134651184E-05
~~ }