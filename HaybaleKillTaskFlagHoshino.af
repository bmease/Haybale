~~ {
~~ FOR AUTO-COMPLETION ASSISTANCE: testvar getvar setvar touchvar clearallvars clearvar getcharintprop getchardoubleprop getcharquadprop getcharboolprop getcharstringprop getisspellknown getcancastspell_hunt getcancastspell_buff getcharvital_base getcharvital_current getcharvital_buffedmax getcharskill_traininglevel getcharskill_base getcharskill_buffed getplayerlandcell getplayercoordinates coordinategetns coordinategetwe coordinategetz coordinatetostring coordinateparse coordinatedistancewithz coordinatedistanceflat wobjectgetphysicscoordinates wobjectgetname wobjectgetobjectclass wobjectgettemplatetype wobjectgetisdooropen wobjectfindnearestmonster wobjectfindnearestdoor wobjectfindnearestbyobjectclass wobjectfindininventorybytemplatetype wobjectfindininventorybyname wobjectfindininventorybynamerx wobjectgetselection wobjectgetplayer wobjectfindnearestbynameandobjectclass actiontryselect actiontryuseitem actiontryapplyitem actiontrygiveitem actiontryequipanywand actiontrycastbyid actiontrycastbyidontarget chatbox chatboxpaste statushud statushudcolored uigetcontrol uisetlabel isfalse istrue iif randint cstr strlen getobjectinternaltype cstrf stopwatchcreate stopwatchstart stopwatchstop stopwatchelapsedseconds cnumber floor ceiling round abs getworldname getitemcountininventorybyname getheading getitemcountininventorybynamerx getheadingto actiontrygiveprofile vitae getfellowshipstatus getfellowshipname getfellowshipisopen getfellowshipisleader getfellowshipleaderid getfellowshipcanrecruit getfellowid getfellowshipcount getfellowshiplocked getfellowname getfellowshipisfull sin cos tan sqrt asin acos atan atan2 sinh cosh tanh vtsetmetastate getregexmatch echo chr ord wobjectgetid wobjectgethealth wobjectfindbyid wobjectgetintprop wobjectfindnearestbytemplatetype wobjectgetopencontainer testquestflag getquestktprogress isrefreshingquests getquestktrequired getqueststatus getisday getgamehour getgamehourname getisnight getgameday getgameticks getminutesuntilday getgamemonth getgamemonthname getminutesuntilnight getgameyear uisetvisible uiviewvisible uiviewexists getgvar touchgvar getpvar touchpvar setgvar cleargvar setpvar clearpvar testgvar clearallgvars testpvar clearallpvars dictgetitem dictcreate dicthaskey dictadditem dictkeys dictremovekey dictvalues dictclear dictsize dictcopy listgetitem listpop listcreate listcontains listremove listadd listindexof listremoveat listinsert listlastindexof listclear listcopy listcount listreverse

~~
~~ File auto-generated by metaf, a program created by Eskarina of Morningthaw/Coldeve.
~~		Get metaf here: https://github.com/JJEII/metaf/
~~
~~ All recognized structural designators:
~~		STATE:				DO:
~~		IF:					NAV:
~~
~~ All recognized CONDITION (IF:) operation keywords:
~~		Never				NavEmpty			MobsInDist_Priority		Not
~~		Always				Death				NeedToBuff				PSecsInStateGE
~~		All					VendorOpen			NoMobsInDist			SecsOnSpellGE
~~		Any					VendorClosed		BlockE					BuPercentGE
~~		ChatMatch			ItemCountLE			CellE					DistToRteGE
~~		MainSlotsLE			ItemCountGE			IntoPortal				Expr
~~		SecsInStateGE		MobsInDist_Name		ExitPortal				ChatCapture
~~
~~ All recognized ACTION (DO:) operation keywords:
~~		None				EmbedNav			ChatExpr				SetOpt
~~		SetState			CallState			SetWatchdog				CreateView
~~		Chat				Return				ClearWatchdog			DestroyView
~~		DoAll				DoExpr				GetOpt					DestroyAllViews
~~
~~ All recognized NAV types:
~~		circular			follow
~~		linear				once
~~
~~ All recognized NAV NODE types:
~~		flw					vnd
~~		pnt					ptl
~~		rcl					tlk
~~		pau					chk
~~		cht					jmp
~~		prt (deprecated in VTank)
~~ }


STATE: {Default} ~~ {

	IF: Always
		DO: DoAll
				DoExpr {setvar[NUMBER, 1]}
				DoExpr {setvar[MONSTER, 5]}
				DoExpr {setvar[OBJECT, 7]}
				DoExpr {setvar[PLAYER, 24]}
				DoExpr {setvar[VENDOR, 25]}
				DoExpr {setvar[NPC, 37]}

				DoExpr {setvar[COLOR_DEBUG, 17]}
				DoExpr {setvar[COLOR_INFO, 5]}
				DoExpr {setvar[COLOR_WARN, 31]}
				DoExpr {setvar[COLOR_ERROR, 21]}

				DoExpr {setvar[LEVEL_DEBUG, 10]}
				DoExpr {setvar[LEVEL_INFO, 20]}
				DoExpr {setvar[LEVEL_WARN, 30]}
				DoExpr {setvar[LEVEL_ERROR, 40]}

				DoExpr {setvar[STRING_PROP_NAME, 1]}

				DoExpr {setvar[OriginalEnableNav, vtgetsetting[EnableNav]]}
				DoExpr {setvar[OriginalOpenDoors, vtgetsetting[OpenDoors]]}
				DoExpr {setvar[OriginalNavCloseStopRange, vtgetsetting[NavCloseStopRange]]}

	IF:	Expr {$LEVEL_DEBUG>=@HBDebug}
		DO:	DoExpr {echo[`[DEBUG] Che Kill Task Flag Hoshino v0.0.1 by Che de Pa of Sundering`, $COLOR_DEBUG]}

	IF:	ChatMatch {![Rr]eset}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: DoAll
				SetOpt {EnableNav} {True}
				SetOpt {OpenDoors} {False}
				SetOpt {NavCloseStopRange} {0.00625}

	~~ If in Hoshino start flagging
	IF:	BlockE 49E40000
		DO:	DoAll
				SetState {ToFreng}

	~~ Bail out if not Hoshino
	IF:	Not BlockE 49E40000
		DO:	DoAll
				DoExpr {ifthen[$LEVEL_WARN>=@HBDebug, `echo[\`[WARN] Must be at Royal Tent! Finishing!\`, $COLOR_WARN]`, `false`]}
				SetState {Finished}

~~ }


STATE: {UseNPC} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF:	Any
			All
				ChatCapture {^(?<tellname>.*?) tells you, \"(?<npctext>.*)\"$} {}
				Expr {$capturegroup_tellname==$targetNPC}
			All
				ChatCapture {^(?<tellname>.*?) gives you (?<npctext>.*)$} {}
				Expr {$capturegroup_tellname==$targetNPC}
		DO: Return

	~~ Use NPC
	IF: Always
		DO: DoAll
				DoExpr {actiontryuseitem[wobjectfindnearestbynameandobjectclass[$NPC,$targetNPC]]}
				SetState {UseNPC}

~~ }


STATE: {ToFreng} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: EmbedNav ToFreng {ToFreng}

	IF: NavEmpty
		DO: DoAll
				DoExpr {setvar[targetNPC,`Sergeant Freng`]}
				CallState {UseNPC} {ToTrebuus}

~~ }


STATE: {ToTrebuus} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: EmbedNav ToTrebuus {ToTrebuus}

	IF: NavEmpty
		DO: DoAll
				DoExpr {setvar[targetNPC,`Sergeant Trebuus`]}
				CallState {UseNPC} {ToKirtal}

~~ }


STATE: {ToKirtal} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: EmbedNav ToKirtal {ToKirtal}

	IF: NavEmpty
		DO: DoAll
				DoExpr {setvar[targetNPC,`Aun Kirtal`]}
				CallState {UseNPC} {ToAurin}

~~ }


STATE: {ToAurin}

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: NavEmpty
		DO: DoAll
				DoExpr {setvar[targetNPC,`Lieutenant Aurin`]}
				CallState {UseNPC} {ToTakamaki}

~~ }


STATE: {ToTakamaki} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: EmbedNav ToTakamaki {ToTakamaki}

	IF: NavEmpty
		DO: DoAll
				DoExpr {setvar[targetNPC,`Lieutenant Takamaki`]}
				CallState {UseNPC} {ToIrashi}

~~ }


STATE: {ToIrashi} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: NavEmpty
		DO: DoAll
				DoExpr {setvar[targetNPC,`Corporal Irashi`]}
				CallState {UseNPC} {ToEorlinde}

~~ }


STATE: {ToEorlinde} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: EmbedNav ToEorlinde {ToEorlinde}

	IF: NavEmpty
		DO: DoAll
				DoExpr {setvar[targetNPC,`Lord Eorlinde`]}
				CallState {UseNPC} {ToGriffon}

~~ }


STATE: {ToGriffon} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: NavEmpty
		DO: DoAll
				DoExpr {setvar[targetNPC,`Griffon`]}
				CallState {UseNPC} {ToAkiko}

~~ }


STATE: {ToAkiko} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: EmbedNav ToAkiko {ToAkiko}

	IF: NavEmpty
		DO: DoAll
				DoExpr {setvar[targetNPC,`Hanamoto Aki'ko`]}
				CallState {UseNPC} {ToOutsideTent}

~~ }


STATE: {ToOutsideTent} ~~ {

	IF: All
			ChatCapture {(^(\[[A-z]+?\] |)You|.*\<Tell:IIDString:.+:(?<name>[^\<]*)\>.+\<\\Tell\>) (?<saythink>.*), \"#reset\"$} {}
			Any
				Expr {$capturegroup_saythink==`say`}
				Expr {$capturegroup_saythink==`think`}
				Expr {listcontains[@HBCharacterList, $capturegroup_name]}
		DO:	DoAll
				DoExpr {$HBReset=true}
				SetState {Finished}

	IF: Always
		DO: EmbedNav ToOutsideTent {ToOutsideTent}

	IF: NavEmpty
		DO: SetState {Finished}

~~ }


STATE: {Finished} ~~ {

	IF: Expr {$LEVEL_INFO>=@HBDebug}
		DO: DoAll
				DoExpr {echo[`Finished flagging at Hoshino`, $COLOR_INFO]}

	~~ Reset all options to what they originally were
	IF: Always
		DO: DoAll
				EmbedNav Empty {[None]}

				SetOpt {EnableNav} {$OriginalEnableNav}
				SetOpt {OpenDoors} {$OriginalOpenDoors}
				SetOpt {NavCloseStopRange} {$OriginalNavCloseStopRange}

	IF: Always
		DO: ChatExpr {`/vt meta load `+$HBReturnMeta}

~~ }


NAV: Empty once ~~ {
~~ }

NAV: ToFreng once ~~ {
	pnt -42.9861611048381 80.6656923135122 0.0500208298365275
~~ }

NAV: ToTrebuus once ~~ {
	pnt -42.9676364262899 80.6588991006215 0.0500208298365275
~~ }

NAV: ToKirtal once ~~ {
	pnt -42.9558551152547 80.7066286087036 0.0500208298365275
~~ }

NAV: ToTakamaki once ~~ {
	pnt -42.9723550796509 80.700259065628 0.0500208298365275
	pnt -42.9860733668009 80.7001898765564 0.0487708330154419
	pnt -42.9928945541382 80.7039801756541 0.0487708330154419
~~ }

NAV: ToEorlinde once ~~ {
	pnt -42.9921155929565 80.6947569529216 0.0487708330154419
~~ }

NAV: ToAkiko once ~~ {
	pnt -43.0095975240072 80.6923855145772 0.0487708330154419
~~ }

NAV: ToOutsideTent once ~~ {
	pnt -43.0027503967285 80.693311214447 0.0487708330154419
	pnt -42.9856477737427 80.7004572232564 0.0487708330154419
	pnt -42.9655810038249 80.7001403649648 0.0500208298365275
	pnt -42.9421462376912 80.6835847218831 0.0506753126780192
~~ }
